# ES6

### **Prevent Object Mutation →** JavaScript provides a function `Object.freeze` to prevent data mutation.

### **Use Arrow Functions to Write Concise Anonymous Functions**

```jsx
const myFunc = () => {
  const myVar = "value";
  return myVar;
}

//if there is no function body
const myFunc = () => "value";

//Arrow Functions with Parameters
const doubler = (item) => item * 2;

//Set Default Parameters for Your Functions
const greeting = (name = "Anonymous") => "Hello " + name;

```

### **Use the Rest Parameter with Function Parameters**

```jsx
/*The rest parameter eliminates the need to check the args array and allows us to apply map(), filter() and reduce() on the parameters array.*/
function howMany(...args) {
  return "You have passed " + args.length + " arguments.";
}
```

### **Use the Spread Operator to Evaluate Arrays In-Place**
